How did viewing a diff between two versions of a file help you see the bug that was introduced?

    Answer: you can easily see how file change from one version to the other then pinpoint errors.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    reuse and comparison.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

    In manually control, you can group changes in logical unit that easier to trace, which not in auto save, but
    autosave can show clearly the change path.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    I think because git system mostly deal with files connected in one project of different moduls. Google Docs
    just deal with individual files.

How can you use the commands git log and git diff to view the history of files?

    git log # to find commit id, using first 4 digit is fine.
    git diff <commit_id> <commit_id>

How might using version control make you more confident to make changes that could break something?

    Can always trace back to find where break happened. And use git diff to find why.

