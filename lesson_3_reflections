When would you want to use a remote repository rather than keeping all your work
local?

   When the work is stable, put the repo remotely will make it easy to share. Or work from multiple computers.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You want to control which code is stable enough or good enough to push or pull, when local changes happened,
    you don't want to be covered by auto pull.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks only happy within GitHub, like a clone, clone happens between Github and locally, branch onl works on lo
    cal repository or local in Github.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If I am about to go without Internet access for a while, for example to work
        on a plane, I can update my local copy before I leave.  I can do this even
            if I'm not ready to merge those changes into my own branches yet.  Then if I
                want, I can perform the merge while offline, or I need to know what the
                    remote version is at some point, I have an easy way to access it.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    it would be so hard, email, coding pieces, but with git and GitHub, creating Pull Request will work as a
    code review request. And can communicate easily and show later changes through pull request.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When there is colliberator in development, that's the best thing to do. Or a new experiment feature.

    Just monkey around.
